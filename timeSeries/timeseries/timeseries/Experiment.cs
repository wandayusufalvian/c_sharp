using System;
using System.Collections.Generic;
using System.Net.Http;
using System.Text;
using System.Threading.Tasks;
using MyCouch;
using Raven.Client.Documents;
using Raven.Client.Documents.Session;

namespace timeseries
{
    public class Experiment
    {

        public static void Experiment1()
        {  /*
            - write data with id is auto generated by couchDB 
            */
            string pi = "http://yusuf:yusuf@10.100.3.54:5984/";
            List<int> period = new List<int> { 0, 23, 59, 59 };
            int sensorQuantity = 5;
            string database = "test1";

            var watch = System.Diagnostics.Stopwatch.StartNew();
            using (var db = new MyCouchStore(pi, "test"))
            {
                Service.CreateDocuments(pi, period, sensorQuantity, database);
            }

            watch.Stop();
            Console.WriteLine($"Execution Time: {watch.ElapsedMilliseconds} ms");
        }

        public static void Experiment2()
        {
            /*
             write data with id is timestamp
             */
            string pi = "http://yusuf:yusuf@10.100.3.54:5984/";
            List<int> period = new List<int> { 0, 0, 0, 30 };
            int sensorQuantity = 5;
            string database = "test2"; 

            var watch = System.Diagnostics.Stopwatch.StartNew();
            using (var db = new MyCouchStore(pi, database))
            {
                Service.CreateDocuments2(pi, period, sensorQuantity, database);
            }

            watch.Stop();
            Console.WriteLine($"Execution Time: {watch.ElapsedMilliseconds} ms");
        }

        public static async Task Experiment3(HttpClient client,int dataQuantity)
        {  
            var watch = System.Diagnostics.Stopwatch.StartNew();

            HttpResponseMessage result = await client.GetAsync($"http://10.100.3.54:5984/test/_design/12hours/_view/name-name?limit={dataQuantity}");
            String a = result.Content.ReadAsStringAsync().Result;
            Console.WriteLine(a);

            watch.Stop();
            Console.WriteLine($"Execution Time: {watch.ElapsedMilliseconds} ms");
        }

        public static void Experiment4()
        {   //save 24 hour data to ravenDB
            List<int> period = new List<int> { 0, 23, 59, 59 };
            int sensorQuantity = 5;

            var watch = System.Diagnostics.Stopwatch.StartNew();

            Service.CreateDocuments3(period,sensorQuantity);

            watch.Stop();
            Console.WriteLine($"Execution Time: {watch.ElapsedMilliseconds} ms");
        }

        public static void Experiment5()
        {
            var watch = System.Diagnostics.Stopwatch.StartNew();

            using (IDocumentStore session = DocumentStoreHolder.Store)
            {

            }

            watch.Stop();
            Console.WriteLine($"Execution Time: {watch.ElapsedMilliseconds} ms");
        }
    }
}
